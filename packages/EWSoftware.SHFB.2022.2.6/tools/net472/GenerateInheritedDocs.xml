<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GenerateInheritedDocs</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs">
            <summary>
            This class represents the task that scans XML comments files for <b>&lt;inheritdoc /&gt;</b> tags and
            produces a new XML comments file containing the inherited documentation for use by Sandcastle.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.ConfigurationFile">
            <summary>
            This is used to set the configuration file to use from the MSBuild project file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.Execute">
            <summary>
            This is used to execute the task and generate the inherited documentation
            </summary>
            <returns>True on success or false on failure.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.LoadConfiguration(System.String)">
            <summary>
            Load the configuration file
            </summary>
            <param name="configFile">The configuration file to load</param>
            <exception cref="T:System.ArgumentException">This is thrown if the configuration file does not exist or is not valid</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.ScanCommentsFiles">
            <summary>
            This scans the XML comments files for &lt;inheritdoc /&gt; tags and adds the inherited documentation
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.InheritDocumentation(System.Xml.XmlNode)">
            <summary>
            This is used to generate the inherited documentation for the given member.  Only tags at the root
            level are processed here.
            </summary>
            <param name="member">The member for which to inherit documentation</param>
            <remarks>This will recursively expand documentation if a base member's comments are present in the
            generation list.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.MergeComments(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Merge the XML comments from one member into another
            </summary>
            <param name="fromMember">The member from which to merge comments</param>
            <param name="toMember">The member into which the comments merged</param>
            <param name="filter">The selection filter</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.InheritNestedDocumentation(System.Xml.XmlNode)">
            <summary>
            This is used to generate the inherited documentation nested within other documentation elements of
            the given member.  Only nested tags are processed here.
            </summary>
            <param name="member">The member for which to inherit documentation</param>
            <remarks>Unlike root level elements, if the inherited nested documentation contains <c>inheritdoc</c>
            tags, they will not be handled recursively.  Note that common elements such as <c>param</c> are
            inherited automatically at the root level so there's no need to use <c>inheritdoc</c> within them
            unless you want to include something specific using a filter.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.GenerateInheritedDocs.LocateBaseDocumentation(System.String,System.String)">
            <summary>
            Locate and merge the documentation from the base member(s)
            </summary>
            <param name="name">The member name</param>
            <param name="cref">An optional member name from which to inherit
            the documentation.</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.ReflectionFiles">
            <summary>
            This is used to load one or more reflection data files used to look up API information
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.ReflectionFiles.Count">
            <summary>
            This returns the number of reflection files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.ReflectionFiles.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.ReflectionFiles.AddReflectionFile(System.String)">
            <summary>
            Add a reflection file to use for API information
            </summary>
            <param name="filename">The file to add</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.ReflectionFiles.SelectSingleNode(System.String)">
            <summary>
            Find the single node that matches the given XPath query
            </summary>
            <param name="xpath">The XPath query used to find the node</param>
            <returns>The node if found or null if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.ReflectionFiles.Select(System.String)">
            <summary>
            Find all nodes that matches the given XPath query
            </summary>
            <param name="xpath">The XPath query used to find nodes</param>
            <returns>An enumerable list of matching nodes</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs">
            <summary>
            This is used by the comments cache to report a warning message
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs.Message">
            <summary>
            The message to report
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">The message text</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache">
            <summary>
            This is used to cache indexed XML comments files
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexedCommentsFile">
            <summary>
            This represents an indexed XML comments file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexedCommentsFile.Item(System.String)">
            <summary>
            This read-only property returns the XPath navigator for the specified key
            </summary>
            <param name="key">The key to look up</param>
            <returns>The XPath navigator associated with the key</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexedCommentsFile.#ctor(SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="cache">The cache with which this indexed document is associated</param>
            <param name="filename">The name of the XML comments file to index</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexCount">
            <summary>
            This read-only property returns the number of items indexed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.FilesIndexed">
            <summary>
            This read-only property returns the number of comments files that were indexed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.ShowDuplicatesWarning">
            <summary>
            This is used to get or set whether or not duplicate entry warnings are generated
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.AllKeys">
            <summary>
            This read-only property returns all keys in the index
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.Item(System.String)">
            <summary>
            This read-only property returns the comments for the specified key
            </summary>
            <param name="key">The key for which to retrieve comments</param>
            <returns>An <see cref="T:System.Xml.XPath.XPathNavigator"/> for the comments or null if not found.</returns>
        </member>
        <member name="E:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.ReportWarning">
            <summary>
            This is used by the cache to report duplicate key warnings
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.OnReportWarning(SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs)">
            <summary>
            This is used to raise the <see cref="E:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.ReportWarning" /> event
            </summary>
            <param name="args">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="size">The maximum size of the cache</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.LoadXmlCommentsFile(System.String)">
            <summary>
            This loads an XML comments file and handles redirection
            </summary>
            <param name="filename">The XML comments file to load</param>
            <returns>An <see cref="T:System.Xml.XPath.XPathDocument"/> instance for the loaded XML comments file or null if it could
            not be loaded.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexCommentsFiles(System.String,System.String,System.Boolean,System.Collections.Concurrent.ConcurrentBag{System.Xml.XPath.XPathNavigator})">
            <summary>
            Index all comments files found in the specified folder.
            </summary>
            <param name="path">The path to search.  If null or empty, the current directory is assumed.</param>
            <param name="wildcard">The wildcard to use.  If null or empty, "*.xml" is assumed.</param>
            <param name="recurse">True to recurse subfolders or false to only use the given folder.</param>
            <param name="commentsFiles">Optional.  If not null, an <see cref="T:System.Xml.XPath.XPathDocument"/> is added to the
            collection for each file indexed.</param>
            <remarks>The files are indexed in parallel.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.GetKeys(System.String)">
            <summary>
            This returns an enumerable list of all key values from the specified XML file based on the
            expressions for this cache.
            </summary>
            <param name="file">The XML file from which to obtain the keys</param>
            <returns>An enumerable list of the key values in the given file</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.GetValues(System.String)">
            <summary>
            This returns an enumerable list of all key/value pairs from the specified XML file based on the
            expressions for this cache.
            </summary>
            <param name="file">The XML file from which to obtain the keys</param>
            <returns>An enumerable list of the key/value values in the given file</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException">
            <summary>
            This exception class is thrown by the application if it encounters an unrecoverable error
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor">
            <summary>
            Default constructor.
            </summary>
            <overloads>There are three overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
    </members>
</doc>
